/*
 За квадратна матрица А со димензии n x n, од стандарден влез се внесува бројот n (n > 2) и елементите на матрицата (реални броеви). Нека X e збирот од елементите под главната дијагонала во матрицата А. Нека Y е збирот од елементите под споредната дијагонала во матрицата А. Да се креира нова матрица B на следниот начин:

сите елементи од главната дијагонала во матрицата B треба да имаат вредност X

сите елементи од споредната дијагонала во матрицата B треба да имаат вредност Y

ако даден елемент припаѓа и на главната и на споредната дијагонала во матрицата B, тогаш неговата вредност e X+Y

сите останати елементи во матрицата B имаат вредност 0

Новата матрица B да се испечати на стандарден излез.

 Input:
3
101 202 303
11 22 33
1 2 3

 Output:
 14 0 38
0 52 0
38 0 14
 */



#include <iostream>
#include <cctype>
#include <cmath>
#include <string>
#include <cstring>

using namespace std;


int main (){

    int  n;
    cin >> n;
    double a[100][100];
    double X = 0;
    double Y = 0;

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            cin >> a[i][j];
        }
    }

    for (int i = 1; i < n; ++i) {
        for (int j = 0; j <i ; ++j) {
            X += a[i][j];
        }
    }

    for (int i = 1; i <n ; ++i) {
        for (int j = n-1; i>n-j-1 ;j--) {
            Y += a[i][j];
        }
    }





    double b[100][100];

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            if (i == j && i+j != n-1) {
                b[i][j] = X;
            }
            else if (i+j == n-1 && i!=j){
                b[i][j] = Y;
            }
            else if (i == j && i+j == n-1){
                b[i][j] = X + Y;
            }
            else {
                b[i][j] = 0;
            }
        }
    }

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            cout << b[i][j] << " ";
        }
        cout << endl;
    }




    return 0;
}

