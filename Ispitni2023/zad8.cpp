/*
 Од стандарден влез се задава димензијата на една матрица Аmxn (m,n<=100), а во продолжение се читаат елементите на матрицата. Елементите на матрицата се цели броеви. Потоа се внесува уште еден цел број (големина на буквата Z).
Да се креира нова матрица M чии елементи се добиваат како збирови на елементите кои лежат на страните/контурите на буквата Z (должината на страните на буквата Z - односно бројот на елементи кои треба да бидат земени во пресметката се внесува како параметар од командна линија). Секој елемент од новата матрица (Mij) е еднаков на збирот на елементите кои се наоѓаат во патеката за формирање на буквата Z почнувајќи од соодветниот елемент во матрицата А. Елементите за кои не може да се формира буквата Z остануваат исти и во новокреираната матрица.

Новодобиената матрица M да се испечати на стандарден излез.

Пример влез:
4
5
1 2 3 4 5
6 7 8 9 10
11 12 13 14 15
16 17 18 19 20
3

Излез:
49 56 63 4 5
84 91 98 9 10
11 12 13 14 15
16 17 18 19 20

 49 = 1+2+3+7+11+12+13
56 = 2+3+4+8+12+13+14
98 = 8+9+10+14+18+19+20
 */

#include <iostream>
#include <cstring>
#include <cmath>
using namespace std;

int sumZshape (int a[100][100] , int i,int j,int n , int m,int Zsize){
    int sum = 0;
    for (int k = j; k < (j+Zsize)-1; ++k) {

        sum += a[i][k];
    }
    for (int k = j+1; k < (j+Zsize) ; ++k) {

        sum += a[i+(Zsize-1)][k];
    }
    int l = 0;
    for (int k = i; k < (i+Zsize); ++k) {

        sum += a[k][j+(Zsize-1)-l];
        l++;
    }
    return sum;
}

int main() {

    int a[100][100];
    int temp[100][100];
    int n , m;
    cin >> n >> m;

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cin >> a[i][j];
            temp[i][j] = a[i][j];
        }
    }

    int Zsize;
    cin >> Zsize;


    for (int i = 0; i <= (n-Zsize); ++i) {
        for (int j = 0; j <= (m-Zsize); ++j) {
            temp[i][j] = sumZshape(a,i,j,n,m,Zsize);
        }
    }

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            a[i][j] = temp[i][j];
            cout << a[i][j] << " ";
        }
        cout << endl;
    }






    return 0;
}


