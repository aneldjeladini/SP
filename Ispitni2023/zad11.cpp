/*
 Од стандарден влез се задава димензија на една матрица Аmxn (m,n<=100), а во продолжение се читаат елементите на матрицата. Елементите на матрицата се цели броеви. Потоа се внесува уште еден цел број (големина на буквата N).

Да се креира нова матрица M чии елементи се добиваат како збирови на елементите кои лежат на страните/контурите на буквата N (должината на страните на буквата N - односно бројот на елементи кои треба да бидат земени во пресметката се внесува како параметар од командна линија). Секој елемент од новата матрица (Mij) е еднаков на збирот на елементите кои се наоѓаат во патеката на формирање на буквата N почнувајќи од соодветниот елемент во матрицата А. Елементите за кои не може да се формира буквата N остануваат исти и во новокреираната матрица.

Новодобиената матрица M да се испечати на стандарден излез.

Пример влез:

4
5
1 2 3 4 5
6 7 8 9 10
11 12 13 14 15
16 17 18 19 20
3


Излез:
49 56 63 4 5
84 91 98 9 10
11 12 13 14 15
16 17 18 19 20

 49 = 1+6+11+7+13+8+3

56 = 2+7+12+8+14+9+4

98 = 8+13+18+14+20+15+10
 */

#include <iostream>
#include <cstring>
#include <cmath>
using namespace std;

int sum_N_shape (int a[100][100], int i, int j, int size_N){
    int sum = 0;
    if (size_N > 1) {
        for (int k = i + 1; k < (i + size_N); ++k) {
            sum += a[k][j];
        }
        for (int k = i; k < (i + size_N - 1); ++k) {
            sum += a[k][j + size_N - 1];
        }
        int l = 0;
        for (int k = i; k < (i + size_N); ++k) {
            sum += a[k][j + l];
            ++l;
        }
    }
    else {
        sum += a[i][j];
        sum *= 2;
    }
    return sum;
}


int main() {

    int a[100][100],temp[100][100];
    int n,m;
    cin >> n >> m;

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cin >> a[i][j];
            temp[i][j] = a[i][j];
        }
    }

    int size_N;
    cin >> size_N;


    for (int i = 0; i <= n-size_N; ++i) {
        for (int j = 0; j <= m-size_N; ++j) {
            temp[i][j] = sum_N_shape(a,i,j,size_N);
        }
    }
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            a[i][j] = temp[i][j];
            cout << a[i][j] << " ";
        }
        cout << endl;
    }



    return 0;
}


